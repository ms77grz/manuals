##### 1 - Introduction
$ cat /etc/shells
$ which bash

touch hello.sh
ls -la
-rw-r--r-- 1 magax magax   48 дек 18 22:01 hello.sh

#! /bin/bash
echo "Hello World"

./hello.sh
bash: ./hello.sh: Permission denied

chmod +x hello.sh
ls -la
-rwxr-xr-x 1 magax magax   33 дек 18 22:11 hello.sh

./hello.sh
Hello World!

#### 2 - Using Variables and Comments
system variables are difined by your OS and they are in capital case
user variables are difined by you and they are in lower case

#### 3 - Read User Input

#### 4 - Pass Arguments to a Bash-Script

#### 5 - If Statement
if then
if then else
if elif else

if [condition]
then
    statement
fi

integer comparison
string comparison

#### 6 - File test operators
-e # is file excists
-f # is file regular and excists
-d # is directory excists
-c # is character special file excists
-b # is block special file excists
-s # checks whether file empty or not
-r # read permissions
-w # write permissions
-x # execute permissions

cat > test
I will write something here
<C-d>

#### 7 - How to append output to the end of text file

#### 8 - Logical 'AND' Operator

#### 9 - Logical 'OR' Operator

#### 10 - Perform arithmetic operations

#### 11 - Floating point math operations in bash | bc Commands
bc stands for bash calculator

#### 12 - The case statement
case expression in
    pattern1 )
        statements ;;
    pattern2 )
        statements ;;
    ...
esac

#### 13 - The case statement Example

#### 14 - Array variables

#### 15 - WHILE Loops
while [ condition ]
do
    command1
    command2
    command3
done

#### 16 - using sleep and open terminal with WHILE Loops

#### 17 - Read a file content in Bash
input redirection
using pipes
using ifs

#### 18 - UNTIL loop

until [ condition ]
do
    command1
    command2
    ...
    ...
    commandN
done

#### 19 - FOR loop

for VARIABLE in 1 2 3 4 5 .. N
do
    command1
    command2
    commandN
done
#OR--------------------------------

for VARIABLE in file1 file2 file3
do
    command1
    command2
    commandN
done
#OR-------------------------------

for OUTPUT in $(Linux-Or-Unix-Command-Here)
do
    command1 on $OUTPUT
    command2 on $OUTPUT
    commandN
done
#OR-------------------------------

for (( EXP1; EXP2; EXP3 ))
do
    command1
    command2
    command3
done

#### 20 - use FOR loop to execute commands

for command in
do
    echo $command
done

#### 21 - Select loop

select varName in list
do
    command1
    command2
    ...
    ...
    commandN
done

#### 22 - Break and continue

#### 23 - Functions

function name() {
    Commands
}

name () {
    Commands
}

#### 24 - Local variables
